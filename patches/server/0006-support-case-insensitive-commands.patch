From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: lukas81298 <lukas81298@gommehd.net>
Date: Sun, 11 Dec 2022 19:52:20 +0100
Subject: [PATCH] =?UTF-8?q?support=20case=20insensitive=20commands=C3=82?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index b9b3277c8ed94e0cd30b20b9c00a33eaad48e5ac..fcf93097fa3c1caf3ef7e0ce21a9768ff3bc90e9 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2322,10 +2322,21 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
         return new SignedMessageChain.DecodeException(ServerGamePacketListenerImpl.INVALID_COMMAND_SIGNATURE);
     }
 
+    // Cheetah start - Support case insensitive commands
+    private static String commandToLower(String command) {
+        if (command.isEmpty()) {
+            return command;
+        }
+        String[] split = command.split(" ");
+        split[0] = split[0].toLowerCase();
+        return String.join(" ", split);
+    }
+    // Cheetah end
+
     private ParseResults<CommandSourceStack> parseCommand(String command) {
         com.mojang.brigadier.CommandDispatcher<CommandSourceStack> com_mojang_brigadier_commanddispatcher = this.server.getCommands().getDispatcher();
 
-        return com_mojang_brigadier_commanddispatcher.parse(command, this.player.createCommandSourceStack());
+        return com_mojang_brigadier_commanddispatcher.parse(commandToLower(command), this.player.createCommandSourceStack()); // Cheetah - Support case insensitive commands
     }
 
     private void tryHandleChat(String s, Runnable runnable, boolean sync) { // CraftBukkit
diff --git a/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java b/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
index 5b70f53bc4b27a715b8b7aa13586082adbc4bd16..d23262b646f5614094f4d2c74926401b0b6789c6 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
@@ -63,7 +63,7 @@ public class VanillaCommandWrapper extends BukkitCommand { // Paper
         Preconditions.checkArgument(alias != null, "Alias cannot be null");
 
         CommandSourceStack icommandlistener = VanillaCommandWrapper.getListener(sender);
-        ParseResults<CommandSourceStack> parsed = this.commands().getDispatcher().parse(this.toDispatcher(args, this.getName()), icommandlistener); // Paper
+        ParseResults<CommandSourceStack> parsed = this.commands().getDispatcher().parse(this.toDispatcher(args, this.getName().toLowerCase()), icommandlistener); // Cheetah - Support case insensitive commands
 
         List<String> results = new ArrayList<>();
         this.commands().getDispatcher().getCompletionSuggestions(parsed).thenAccept((suggestions) -> { // Paper
